function s = UDA_get_alleles_gui(s, p)
%% function s = UDA_get_alleles_gui(s, p)
% 
%  Exports alleles from NM files.
%  
%  1. Filter for number of dots per channel
%  2. Fit dots (requires image data)
%  3. Apply CC corrections (requires a .cc file)
%  4. Output a csv file with all the data
%

debug = 0;

if debug
    s.fitting = 1;
    s.cc = 1;
    s.ccFile = '';
    
    s.nDPA = [2, 2, 3, 1];
    
    s.outFile = '~/Desktop/out.csv';
    s.delta = 0;
    
    p.channels = {'cy5', 'cy7', 'a594', 'cy3'};
    p.inputFolder = '/data/current_images/iEG/iEG_001/';
    p.nNuclei = 956;
end

gui.win = figure('Position', [300,200,350,800], 'Menubar', 'none', ...
    'NumberTitle','off', ...
    'Name', 'UDA_get_alleles - settings', ...
    'Resize', 'off');

gui.infoPanel = uipanel('Position', [0, .9, 1, .10], 'Title', '');

gui.settingsPanel = uipanel('Position', [0, .50, 1, .4], 'Title', 'Settings');

gui.channelsPanel = uipanel('Position', [0, .1, 1, .4], 'Title', 'Dots per allele');

gui.ctrlPanel = uipanel('Position', [0, 0, 1, .1], 'Title', '');


gui.info = uicontrol('Style', 'text', ...
            'String', 'ctrl.info', ...,
            'Units', 'Normalized', ...
            'Position', [0, 0, 1, 1], ...
            'HorizontalAlignment','left', ...
            'FontName', get(groot,'FixedWidthFontName'), ...
            'BackgroundColor', 'White', ...
            'Parent', gui.infoPanel);

gui.fitting = uicontrol('Style', 'Checkbox', ...
    'String', 'Localization', ...
    'Value', s.fitting, ...
    'Units', 'Normalized', ...
    'Position', [0,.9, 1, .1], ...
    'Parent', gui.settingsPanel, ...
    'Callback', @updateGUI);

gui.cc = uicontrol('Style', 'Checkbox', ...
    'String', 'Chromatic Aberrations', ...
    'Value', s.fitting, ...
    'Units', 'Normalized', ...
    'Position', [0,.8, 1, .1], ...
    'Parent', gui.settingsPanel, ...
    'Callback', @updateGUI);

gui.ccFile = uicontrol('Style', 'pushbutton', ...
    'String', 'cc file:', ...    
    'Units', 'Normalized', ...
    'Position', [0,.7, 1, .1], ...
    'Parent', gui.settingsPanel, ...
        'Callback', @gui_setCCfile);


gui.delta0 = uicontrol('Style', 'Checkbox', ...
    'String', 'Perfect matches only', ...
    'Value', 1, ...
    'Units', 'Normalized', ...
    'Position', [0,.6, 1, .1], ...
    'Parent', gui.settingsPanel, ...
    'Callback', @updateGUI);

gui.deltaText = uicontrol('Style', 'text', 'String', 'Max deviation:', ...
    'Units', 'Normalized', ...
    'Position', [0,.5, .5, .1], ...
    'Parent', gui.settingsPanel, ...
    'Enable', 'off');

gui.delta = uicontrol('Style', 'edit', 'String', '0', ...
    'Units', 'Normalized', ...
    'Position', [.5,.5, .5, .1], ...
    'Parent', gui.settingsPanel, ...
    'Enable', 'off');
        

gui.outFile = uicontrol('Style', 'pushbutton', ...
    'String', ['Output file: ' s.outFile], ...    
    'Units', 'Normalized', ...
    'Position', [0,.3, 1, .1], ...
    'Parent', gui.settingsPanel, ...    
    'Callback', @gui_setOutputFile);


set(gui.info, 'String', sprintf('Input folder: %s\nNuclei: %d', p.inputFolder, p.nNuclei));       
        
% 
NC = numel(p.channels);
for kk = 1:NC
    %vpos = (kk-.5)/(NC+1);
    vpos = (NC-kk+0.5)/(NC+1);
    gui.cNdots(kk) = uicontrol('Style', 'edit', ...
        'String', sprintf('%d', s.nDPA(kk)), ...
        'Units', 'Normalized', ...
        'Position', [.5, vpos, .5, 1/(NC+1)], ...
        'Parent', gui.channelsPanel);
    gui.cName(kk) = uicontrol('Style','text',...
        'String',p.channels{kk},...
        'Units', 'Normalized', ...
        'Position', [0, vpos, .5, 1/(NC+1)], ...
        'Parent', gui.channelsPanel);    
end

gui.export = uicontrol('Style', 'pushbutton', ...
            'String', 'Export', ...
            'Units', 'Normalized', ...
            'Position', [.7, 0,.3,1], ...
            'Callback', @gui_export,...
            'Parent', gui.ctrlPanel);
        
gui.help = uicontrol('Style', 'pushbutton', ...
            'String', 'Help', ...
            'Units', 'Normalized', ...
            'Position', [.35, 0,.3,1], ...
            'Callback', @gui_help,...
            'Parent', gui.ctrlPanel);        
        
gui.cancel = uicontrol('Style', 'pushbutton', ...
            'String', 'Cancel', ...
            'Units', 'Normalized', ...
            'Position', [.0, 0,.3,1], ...
            'Callback', @gui_cancel,...
            'Parent', gui.ctrlPanel);


uiwait(gcf);
close(gui.win);

    function gui_setCCfile(varargin)
       [b, a] = uigetfile();
       if ~isnumeric(a)
           s.ccFile = [b, a];
           set(gui.ccFile, 'String', s.ccFile);
       end
    end

    function gui_setOutputFile(varargin)
       s.outFile = uigetfile();
       set(gui.outFile, 'String', s.outFile);
    end

    function parseGUI()        
        if(get(gui.delta0, 'Value') == 1)
            s.delta = 0;
        else
            s.delta = str2num(get(gui.delta, 'String'));
        end
        
        % Don't parse these from the GUI
        % s.outFile = get(gui.outFile, 'String');
        % s.ccFile =  get(gui.ccFile, 'String');
        
        s.cc = get(gui.cc, 'Value');        
        s.fitting = get(gui.fitting, 'Value');
        
        for kk = 1:numel(p.channels)
            s.nDPA(kk) = str2num(get(gui.cNdots(kk), 'String'));
        end
        
    end

    function updateGUI(varargin)
        %disp('updategui')
       parseGUI() 
       if (get(gui.delta0, 'Value') == 1)           
           set(gui.delta, 'Enable', 'off');
           set(gui.deltaText, 'Enable', 'off');
       else           
           set(gui.delta, 'Enable', 'on');
           set(gui.deltaText, 'Enable', 'on');
       end
       
       if get(gui.cc, 'Value') == 1
           set(gui.ccFile, 'Enable', 'on');
       else
           set(gui.ccFile, 'Enable', 'off');
       end
           
    end

    function gui_export(varargin)        
        parseGUI;
       uiresume(); 
    end

    function gui_cancel(varargin)
        s = [];
        p = [];
       uiresume(); 
    end

    function gui_help(varargin)
        h = msgbox([help('UDA_get_alleles_gui') sprintf('\nsee also help(UDA_alleles)')]);
        uiwait(h);        
    end

end